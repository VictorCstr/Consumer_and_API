version: "3.8"

services:
  rabbit:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - backend
    volumes:
      - db_data_info:/rabbitmq

  db:
    container_name: mysql_db
    image: mysql:latest
    volumes:
      - db_data_info:/mysql
    restart: always
    env_file:
      - ./api/.db.env
    ports:
      - "3306:3306"
    expose:
      - "3306"
    networks:
      - backend

  cache:
    container_name: cache_repository
    image: redis:latest
    volumes:
      - db_data_info:/redis
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - backend

  api:
    container_name: fastify_api
    depends_on:
      rabbit:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: development
    ports:
      - "8081:8081"
    expose:
      - "8081"
    restart: always
    env_file:
      - ./api/.env
    networks:
      - backend

  consumer:
    container_name: consumer_service
    depends_on:
      api:
        condition: service_started
      rabbit:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./consumer/Dockerfile
      target: development
    ports:
      - "8082:8082"
    expose:
      - "8082"
    restart: always
    env_file:
      - ./consumer/.env
    networks:
      - backend

volumes:
  db_data_info: {}
networks:
  backend:
    driver: bridge
